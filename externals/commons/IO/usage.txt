Im allgemeinen sollte für das logging nur

#include <IO/Log.h>
using namespace IO;

genügen. Erwähnenswert ist die USE_BASH_COLORS compilerflag.


Zum loggen gibt es die üblichen funktionen
	Log::verbose(string, options)
	Log::info(string, options)
	Log::warn(string, options)
	Log::error(string, options)

(die Log.h includet automatisch boost/lexical_cast.hpp).
Die options sind zusammen OR'bar aus
Console::FLUSH (appended ein std::flush)
Console::END (appended ein "\n")
Console::CLEAR (text fängt mit einem clear line an)
Default ist Console::END.


Für die ProgressBar muss eine variable angelegt und dann
poll aufgerufen werden:
	
	ProgressBar pBar(int barWidth);
	string pBar.poll(float progress) // progress aus [0,1]

Hier mal eine übliche main.cpp:

int main(int argc, char* argv[]) {
	Log::info("Initializing");
	// initialisieren
	if (thingsWentHorriblyWrong) {
		Log::error("We failed because things went horribly wrong. Aborting.");
		return 1;
	}

	Console::ProgressBar pBar(20);
	int n = 5000;
	for (int i=0; i<n; ++i) {
		if ((i%100) == 0) {
			string pb = pBar.poll( static_cast<float>(i) / (n-1) );
			Log::info("Computing " + lexical_cast<string>(n) + " values...   " + pb, Console::FLUSH | Console::CLEAR);
		}
	}
	Log::info("Done computing.", Console::CLEAR | Console::END);

	// finalize
	Log::info("Finished. Exiting.");
}
